import game


class PracticeBoard(game.Board):
	BOARD = """
+++----------+++
|++....|     ++|
|++.++.| --- ++|
|++..|.|     +++
|+++.|.+--+=-+++
|++c.|..  |^M^++
+++------------+"""
	TARGETS = {
		"M": (8, -1),
	}

class SmallBoard(game.Board):
	BOARD = """
+------------------+
|....++|M^^N|++....|
|.++...+-==-+...++.|
|.||.|........|.||.|
|.++.|.------.|.++.|
|........c.........|
+------------------+"""
	TARGETS = {
		"M": (20, 3),
		"N": (-1, 3)
	}


class MediumBoard(game.Board):
	BOARD = """
+----+--------+----+
|....|........|....|
|.+-.|.------.|.-+.|
|.|..............|.|
|.|.--.+-==-+.--.|.|
|......|MNOP|......|
|.|.--.+----+.--.|.|
|.|..............|.|
|.+-.|.------.|.-+.|
|....|....c...|....|
+------------------+"""
	TARGETS = {
		"M": (-1, 1),
		"N": (20, 2),
		"O": (25, 17),
		"P": (-1, 17)
	}


class ClassicBoard(game.Board):
	BOARD = """
+------------++------------+
|............||............|
|.+--+.+---+.||.+---+.+--+.|
|.|xx|.|xxx|.||.|xxx|.|xx|.|
|.+--+.+---+.++.+---+.+--+.|
|..........................|
|.+--+.++.+------+.++.+--+.|
|.+--+.||.+--++--+.||.+--+.|
|......||....||....||......|
+----+.|+--+ || +--+|.+----+
     |.|+--+ ++ +--+|.|
     |.||          ||.|
     |.|| +--==--+ ||.|     
-----+.++ |^^^^^^| ++.+----+
 *    .   |^MNOP^|   .    * 
-----+.++ |^^^^^^| ++.+----+
     |.|| +------+ ||.|
     |.||          ||.|
     |.|| +------+ ||.|     
+----+.++ +--++--+ ++.+----+
|............||............|
|.+--+.+---+.||.+---+.+--+.|
|.+-+|.+---+.++.+---+.|+-+.|
| ..||........c.......||.. |
+-+.||.++.+------+.++.||.+-+
+-+.++.||.+--++--+.||.++.+-+
|......||....||....||......|
|.+----++--+.||.+--++----+.|
|.+--------+.++.+--------+.|
|..........................|
+--------------------------+
"""
	TARGETS={
		"M": (0, 0),
		"N": (30, 0),
		"O": (30, 30),
		"P": (0, 30)
	}

if __name__ == "__main__":
	g = ClassicBoard()
	print g.to_string()
	g.start()
	while True:
		data = g.dump()
		g = game.Board.load(data)
		a = raw_input("Turn> ")
		if a == "p":
			print repr(g.dump())
		new_dirn = {
			"a": game.LEFT,
			"w": game.UP,
			"d": game.RIGHT,
			"s": game.DOWN
		}.get(a)
		if new_dirn is not None:
			g.dirn = new_dirn
		g.do_turn()
		print g.to_string()